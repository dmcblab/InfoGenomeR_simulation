configfile: "workflow/configs/config.yaml"

wildcard_constraints:
    root="[^/]+",
    haplotype_name=".+",

rule all:

rule InfoGenomeR_simulation_env:
    conda:
        "envs/simulation.yaml"
    shell:
        "bash workflow/scripts/InfoGenomeR_simulation_env.sh"

# Rule: InfoGenomeR_download
rule InfoGenomeR_download:
    output:
        haplotype_dir=directory(Path(workflow.basedir) / f"../humandb/{config['ref']}/1000G"),
    conda:
        "envs/simulation.yaml"
    shell:
        "workflow/scripts/1000G_download.sh {output.haplotype_dir}"

# Rule: Haplotype_selection

rule Haplotype_selection:
    conda:
        "envs/simulation.yaml"
    input:
        haplotype_dir=os.path.abspath("{root}/1000G")
        # haplotype_dir=lambda wildcards: f"{wildcards.root}/1000G"
    output:
        haplotype_selected=directory("{root}/haplotype_selected/{haplotype_name}")
    shell:
        """
        workflow/scripts/haplotype_select.sh {input.haplotype_dir} {wildcards.haplotype_name} {output.haplotype_selected}
        """

# Rule: InfoGenomeR_simulation
rule InfoGenomeR_simulation:
    conda:
        "envs/simulation.yaml"
    params:
        haplotype=config["haplotype"],
        SV=config["SV"]
    shell:
        """
        workflow/scripts/SVs_to_fa.sh {params.haplotype} {params.SV}
        """

# Rule: InfoGenomeR_art
rule InfoGenomeR_art:
    conda:
        "envs/simulation.yaml"
    params:
        purity=config["purity"],
        coverage=config["coverage"]
    shell:
        """
        workflow/scripts/art.sh {params.mosaicism} {params.coverage}
        """

